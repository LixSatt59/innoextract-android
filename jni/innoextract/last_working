#include <jni.h>
#include <unistd.h>
#include <stdio.h>
#include <android/log.h>
#include "native_interface.hpp"
#include <pthread.h>

#define LOGI(...) __android_log_write(2,"innoextract", __VA_ARGS__)

JavaVM* jvm;

extern "C" void Java_uk_co_armedpineapple_innoextract_MainActivity_nativeDoTest(
		JNIEnv* env, jclass cls, jobject obj) {
	LOGI("starting...");
	printf("test stdout\n");
	fprintf(stderr, "test stderr\n");
	fprintf(stdout, "test stdout 2\n");
	char args[5][5];
	main(0, (char**)args);
	fflush (stdout);

}

int filedes[2];
FILE *inputFile;
pthread_t readThread;
jclass mainClass;
void *readchar(void* data) {
	JNIEnv* env;

	// Attach thread
	jvm->AttachCurrentThread(&env, NULL);
	jmethodID mid = env->GetStaticMethodID(mainClass, "gotChar", "(C)V");

	LOGI("read");

	char c;
	while (c = fgetc(inputFile)) {
		env->CallStaticVoidMethod(mainClass, mid, c);
	}

	LOGI("Done reading");
}

extern "C" void Java_uk_co_armedpineapple_innoextract_MainActivity_init(
		JNIEnv *env, jclass cls, jint fileno) {

	int data = 0;

	env->GetJavaVM(&jvm);

	mainClass = (jclass) env->NewGlobalRef(cls);

	LOGI("init");
	pipe(filedes);

	dup2(filedes[1], STDOUT_FILENO);
	inputFile = fdopen(filedes[0], "r");

	pthread_create(&readThread, NULL, readchar, (void*) &data);
}

